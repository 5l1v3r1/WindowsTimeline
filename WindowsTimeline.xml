<?xml version="1.0" encoding="utf-8"?>
<Artifacts version="2.0">
  <Artifact type="SqliteArtifact" name="Win 10 Timeline (supports Win 10 versions: 1803,1809,1903)" version="1.0" platform="Computer">
    <Source type="FileName">
	ActivitiesCache.db
	</Source>
    <Query>
		SELECT 
			ActivityOperation.ETag as 'Etag',
			case 
				when ActivityOperation.OperationOrder not null 
				then ActivityOperation.OperationOrder
				else ''
			end as 'Order',
		   case
			     when ActivityOperation.ActivityType = 5 
				 then json_extract(ActivityOperation.Payload, '$.appDisplayName') 
				 else ''
			end as 'Program',
			case 
				when ActivityOperation.ActivityType in (11,12,15) 
				then json_extract(ActivityOperation.AppId, '$[0].application')
				when json_extract(ActivityOperation.AppId, '$[0].application') = '308046B0AF4A39CB' 
				then 'Mozilla Firefox-64bit'
				when json_extract(ActivityOperation.AppId, '$[0].application') = 'E7CF176E110C211B'
				then 'Mozilla Firefox-32bit'
				when json_extract(ActivityOperation.AppId, '$[1].application') = '308046B0AF4A39CB'
				then 'Mozilla Firefox-64bit'
				when json_extract(ActivityOperation.AppId, '$[1].application') = 'E7CF176E110C211B'
				then 'Mozilla Firefox-32bit'
				when length (json_extract(ActivityOperation.AppId, '$[1].application')) between 17 and 22 
				then 
					replace(replace(replace(replace(replace
					(json_extract(ActivityOperation.AppId, '$[0].application'),
					'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)'), 
					'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
					'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System' ),
					'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
					'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
			  else    replace(replace(replace(replace(replace(json_extract(ActivityOperation.AppId, 
					'$[1].application'),
					'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)' ), 
					'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
					'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System' ),
					'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
					'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
			end as 'Application',
			case 
				when ActivityOperation.ActivityType not in (11,12,15) 
				then json_extract(ActivityOperation.Payload, '$.displayText') 
				else '' 
			end as 'FileOpened',
			case 
				when ActivityOperation.ActivityType not in (11,12,15) 
				then json_extract(ActivityOperation.Payload, '$.description')||')' 
				else ''  
			end as 'FullPath',
			case 
				when ActivityOperation.ActivityType not in (11,12,15) 
				then json_extract(ActivityOperation.Payload, '$.contenturi') 
				else ''  
			end as 'Content',
			trim(ActivityOperation.AppActivityId,'ECB32AF3-1440-4086-94E3-5311F97F89C4\')  as 'AppActivityId',
			case 
				when ActivityOperation.ActivityType not in (10,11,12,15,16)
				and ActivityOperation.Payload not null 	
				then json_extract(ActivityOperation.Payload, '$.type')||' - ' ||json_extract(ActivityOperation.Payload,'$.userTimezone')
				else ''
			end as 'StatusTimezone',
			case ActivityOperation.ActivityType 
				when 5 then 'Open App/File/Page' 
				when 6 then 'App In Use/Focus' 
				when 10 then 'Clipboard' 
				when 16 then 'Copy/Paste'
				else ActivityOperation.ActivityType 
			end as 'ActivityType',
						case 
				when json_extract(ActivityOperation.AppId, '$[0].platform') = 'afs_crossplatform' 
				  or json_extract(ActivityOperation.AppId, '$[1].platform') = 'afs_crossplatform'
				then 'Yes'
				else ''
			end as'Synced',
			case 
				when json_extract(ActivityOperation.AppId, '$[0].platform') = 'afs_crossplatform' 
				then json_extract(ActivityOperation.AppId, '$[1].platform')
				else json_extract(ActivityOperation.AppId, '$[0].platform') 
			end as 'Platform',
		   case ActivityOperation.OperationType 
				when 1 then 'Active' 
				when 2 then 'Updated' 
				when 3 then 'Deleted' 
				when 4 then 'Ignored' 
			end as 'TileStatus',
			case 
				when ActivityOperation.Id in (select Activity.Id from Activity where Activity.Id = ActivityOperation.Id) 
				then 'Removed' 
			end as 'WasRemoved',
			case 
				when ActivityOperation.Id in (select Activity.Id from Activity where Activity.Id = ActivityOperation.Id) 
				then '' else 'InQueue' 
			end as 'UploadQueue',
			'' as 'IsLocalOnly',
			case 
				when ActivityOperation.ActivityType in (10,11,12,15,16) 
				then ''
				else coalesce(json_extract(ActivityOperation.Payload, '$.activationUri'),json_extract(ActivityOperation.Payload, '$.reportingApp')) 
			end as 'AppUri',
		   ActivityOperation.Priority as 'Priority',	  
		   CASE 
				when ActivityOperation.ActivityType = 6 and ActivityOperation.Payload not null
				then time(json_extract(ActivityOperation.Payload, '$.activeDurationSeconds'),'unixepoch')
				else ''
		   end as 'ActiveDuration',
		   case 
				when 0 >= cast((ActivityOperation.EndTime - ActivityOperation.StartTime) as integer) 
				then '' 
				else time(cast((ActivityOperation.EndTime - ActivityOperation.StartTime) as integer),'unixepoch') 
		   end as 'CalculatedDuration',
		   ActivityOperation.StartTime as 'StartTime', 
		   ActivityOperation.LastModifiedTime as 'LastModified',
			case 
				when ActivityOperation.OriginalLastModifiedOnClient > 0 
				then ActivityOperation.OriginalLastModifiedOnClient	else '' 
			end as 'LastModifiedOnClient',
			case 
				when ActivityOperation.EndTime > 0 
				then ActivityOperation.EndTime else null 
			end as 'EndTime',
			case 
				when ActivityOperation.CreatedInCloud > 0 
				then ActivityOperation.CreatedInCloud else null 
			end as 'CreatedInCloud',
		    cast((ActivityOperation.ExpirationTime - ActivityOperation.LastModifiedTime)	as integer) / '86400' as 'ExpiresInDays',
		    Activity_PackageId.ExpirationTime as 'ExpirationOnPackageID',
		    ActivityOperation.ExpirationTime as 'Expiration',
		    case 
				when ActivityOperation.Tag not NULL
				then ActivityOperation.Tag
				else ''
			end as 'Tag',
		    case 
				when ActivityOperation.MatchId not NULL
				then ActivityOperation.MatchId
				else ''
			end as 'MatchID',
		    ActivityOperation.PlatformDeviceId as 'DeviceID', 
		    ActivityOperation.PackageIdHash as 'PackageIdHash',
		    case 
				when ActivityOperation."Group" not NULL
				then ActivityOperation."Group"
				else ''
			end as 'Group',
		    ActivityOperation.GroupAppActivityId as 'GroupAppActivityId',
		    ActivityOperation.Attachments as 'Attachments',
		    ActivityOperation.EnterpriseId as 'EnterpriseId',
		    '{' || substr(hex(Activity_PackageId.ActivityId), 1, 8) || '-' || 
		           substr(hex(Activity_PackageId.ActivityId), 9, 4) || '-' || 
				   substr(hex(Activity_PackageId.ActivityId), 13, 4) || '-' || 
				   substr(hex(Activity_PackageId.ActivityId), 17, 4) || '-' || 
		    substr(hex(Activity_PackageId.ActivityId), 21, 12) || '}' as 'ActivityId',
		    case 
				when hex(ActivityOperation.ParentActivityId) = '00000000000000000000000000000000'
				then '' 
				else  '{' || substr(hex(ActivityOperation.ParentActivityId), 1, 8) || '-' || 
					substr(hex(ActivityOperation.ParentActivityId), 9, 4) || '-' || 
					substr(hex(ActivityOperation.ParentActivityId), 13, 4) || '-' || 
					substr(hex(ActivityOperation.ParentActivityId), 17, 4) || '-' || 
					substr(hex(ActivityOperation.ParentActivityId), 21, 12) || '}'  
		  end as 'ParentActivityId',
		  case 
				when ActivityOperation.ActivityType = 16 
				then json_extract(ActivityOperation.Payload, '$.clipboardDataId') 
				else '' 
		  end as 'clipboardDataId',
		  case 
				when ActivityOperation.ActivityType = 10 and json_extract(ActivityOperation.ClipboardPayload, '$[0].formatName') = 'Text' 
				then json_extract(ActivityOperation.ClipboardPayload, '$[0].content') 
				else ' ' 
		  end as 'TextBase64',
		  case 
				when ActivityOperation.ActivityType = 10 and ActivityOperation.Payload not null
				then json_extract(ActivityOperation.Payload, '$.1[0].content') 
				else '' 
		  end as 'PayloadText',
		  case 
				when ActivityOperation.ActivityType = 16 
				then json_extract(ActivityOperation.Payload, '$.gdprType') 
				else '' 
		  end as 'gdprType',
		  case 
			    when ActivityOperation.ActivityType = 10 and ActivityOperation.ClipboardPayload not null
			    then json_extract(ActivityOperation.ClipboardPayload, '$.1[0].formatName')
			    else '' 
		  end as 'Format',
		  case 
				when ActivityOperation.ActivityType = 16 and ActivityOperation.ClipboardPayload not null
				then json_extract(ActivityOperation.ClipboardPayload, '$[0].formatName') 
				else '' 
		  end as 'ClipType',
		  case 
				when ActivityOperation.ActivityType in (5,6) and ActivityOperation.OriginalPayload not null
				then json_extract(ActivityOperation.OriginalPayload, '$.appDisplayName') 
				else '' 
		  end as 'OriginalName',
		  case 
				when ActivityOperation.ActivityType in (5,6) and ActivityOperation.OriginalPayload not null
				then json_extract(ActivityOperation.OriginalPayload, '$.displayText') 
				else ''
		  end as 'OriginalFile',
		  case 
				when ActivityOperation.ActivityType in (5,6) and ActivityOperation.OriginalPayload not null
				then json_extract(ActivityOperation.OriginalPayload, '$.description') 
				else ''
		  end as 'OriginalPath', 
		  case 
				when ActivityOperation.ActivityType in (5,6) and ActivityOperation.OriginalPayload not null 
				then coalesce(json_extract(ActivityOperation.OriginalPayload, '$.activationUri'),json_extract(ActivityOperation.OriginalPayload, '$.reportingApp')) 
				else ''
		  end as 'OriginalApp',
		  case 
				when ActivityOperation.ActivityType in (5,6) and ActivityOperation.OriginalPayload not null 
				then json_extract(ActivityOperation.OriginalPayload, '$.activeDurationSeconds') 
				else ''
		  end as 'OrigDuration'

		from Activity_PackageId
		join ActivityOperation on Activity_PackageId.ActivityId = ActivityOperation.Id  
		where 	Activity_PackageId.Platform = json_extract(ActivityOperation.AppId, '$[0].platform') 
			and Activity_PackageId.ActivityId = ActivityOperation.Id

		union  

		select 
		   Activity.ETag as 'Etag',
		   '' as 'Order', 
		   case
			     when Activity.ActivityType = 5 
				 then json_extract(Activity.Payload, '$.appDisplayName') 
				 else ''
			end as 'Program',
		   case 
				when Activity.ActivityType in (11,12,15) 
				then json_extract(Activity.AppId, '$[0].application')	
				when json_extract(Activity.AppId, '$[0].application') = '308046B0AF4A39CB' 
				then 'Mozilla Firefox-64bit'
				when json_extract(Activity.AppId, '$[0].application') = 'E7CF176E110C211B'
				then 'Mozilla Firefox-32bit'
				when json_extract(Activity.AppId, '$[1].application') = '308046B0AF4A39CB' 
				then 'Mozilla Firefox-64bit'
				when json_extract(Activity.AppId, '$[1].application') = 'E7CF176E110C211B'
				then 'Mozilla Firefox-32bit'
				when length (json_extract(Activity.AppId, '$[0].application')) between 17 and 22
				then replace(replace(replace(replace(replace(json_extract(Activity.AppId, '$[1].application'),
					'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)' ),  
					'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
					'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System' ),
					'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
					'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
				else  replace(replace(replace(replace(replace
					(json_extract(Activity.AppId, '$[0].application'),
					'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)'),
					'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
					'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System'),
					'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
					'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
			end as 'Application',
			case 
				when Activity.ActivityType not in (10,11,12,15,16) 
				then json_extract(Activity.Payload, '$.displayText') 
				else '' 
			end as 'FileOpened',
			case 
				when Activity.ActivityType not in (10,11,12,15,16) 
				then json_extract(Activity.Payload, '$.description')||')' 
				else ''  
			end as 'FullPath',
			case 
				when Activity.ActivityType not in (10,11,12,15,16) 
				then json_extract(Activity.Payload, '$.contentUri') 
				else ''  
			end as 'Content',
			trim(Activity.AppActivityId,'ECB32AF3-1440-4086-94E3-5311F97F89C4\')  as 'AppActivityId',
		    case 
				when Activity.ActivityType not in (10,11,12,15,16) 
				and Activity.Payload not null
			    then json_extract(Activity.Payload, '$.type')||' - ' ||json_extract(Activity.Payload,'$.userTimezone')
				else ''
			end as 'StatusTimezone',
			case Activity.ActivityType 
				when 5 then 'Open App/File/Page' 
				when 6 then 'App In Use/Focus' 
				when 10 then 'Clipboard' 
				when 16 then 'Copy/Paste'
				else Activity.ActivityType 
			end as 'ActivityType',
			case 
				when json_extract(Activity.AppId, '$[0].platform') = 'afs_crossplatform' 
				  or json_extract(Activity.AppId, '$[1].platform') = 'afs_crossplatform'
				then 'Yes'
				else ''
			end as'Synced',
			case 
				when json_extract(Activity.AppId, '$[0].platform') = 'afs_crossplatform' 
				then json_extract(Activity.AppId, '$[1].platform')
				else json_extract(Activity.AppId, '$[0].platform') 
			end as 'Platform',
		   case Activity.ActivityStatus 
				when 1 then 'Active' 
				when 2 then 'Updated' 
				when 3 then 'Deleted' 
				when 4 then 'Ignored' 
			end as 'TileStatus',
		   ''   as 'WasRemoved',
		   'No' as 'UploadQueue',
		   case Activity.IsLocalOnly 
				when 0 
				then 'No' 
				when 1 
				then 'Yes' 
				else Activity.IsLocalOnly 
		   end as 'IsLocalOnly',
		   case 
				when Activity.ActivityType in (10,11,12,15,16) 
				then ''
				else  coalesce(json_extract(Activity.Payload, '$.activationUri'),json_extract(Activity.Payload, '$.reportingApp')) 
		   end as 'AppUri',
		   Activity.Priority as 'Priority',	  
		   CASE 
				when Activity.ActivityType = 6 and Activity.Payload not null
				then time(json_extract(Activity.Payload, '$.activeDurationSeconds'),'unixepoch')
				else ''
		   end as 'ActiveDuration',
		   case 
				when 0 >= cast((Activity.EndTime - Activity.StartTime) as integer) 
				then '' 
				else time(cast((Activity.EndTime - Activity.StartTime) as integer),'unixepoch') 
		   end as 'CalculatedDuration',
		   Activity.StartTime as 'StartTime',
		   Activity.LastModifiedTime as 'LastModified',
		   case 
				when Activity.OriginalLastModifiedOnClient > 0 
					then Activity.OriginalLastModifiedOnClient 
					else '' 
			end as 'LastModifiedOnClient',
			case 
				when Activity.EndTime > 0 
				then Activity.EndTime
				else "-" 
			end as 'EndTime',
			case 
				when Activity.CreatedInCloud > 0 
				then Activity.CreatedInCloud
				else "-" 
			end as 'CreatedInCloud',
		    cast((Activity.ExpirationTime - Activity.LastModifiedTime) as integer) / '86400' as 'ExpiresInDays',
		    Activity_PackageId.ExpirationTime as 'ExpirationOnPackageID',
		    Activity.ExpirationTime as 'Expiration',
		    case 
				when Activity.Tag not NULL
				then Activity.Tag
				else ''
			end as 'Tag',
		    case 
				when Activity.MatchId not NULL
				then Activity.MatchId
				else ''
			end as 'MatchID',
		    Activity.PlatformDeviceId as 'DeviceID', 
		    Activity.PackageIdHash as 'PackageIdHash',
		    case 
				when Activity."Group" not null 
				then Activity."Group"
				else ''
			end as 'Group',
		    Activity.GroupAppActivityId as 'GroupAppActivityId',
		    '' as 'Attachments',
		    Activity.EnterpriseId as 'EnterpriseId',
			 '{' || substr(hex(Activity_PackageId.ActivityId), 1, 8) || '-' ||
					substr(hex(Activity_PackageId.ActivityId), 9, 4) || '-' ||
					substr(hex(Activity_PackageId.ActivityId), 13, 4) || '-' ||
					substr(hex(Activity_PackageId.ActivityId), 17, 4) || '-' ||
					substr(hex(Activity_PackageId.ActivityId), 21, 12) || '}' as 'ActivityId',
		    case 
				when hex(Activity.ParentActivityId) = '00000000000000000000000000000000'
				then '' 
				else  
			 '{' || substr(hex(Activity.ParentActivityId), 1, 8) || '-' || 
					substr(hex(Activity.ParentActivityId), 9, 4) || '-' || 
					substr(hex(Activity.ParentActivityId), 13, 4) || '-' || 
					substr(hex(Activity.ParentActivityId), 17, 4) || '-' || 
					substr(hex(Activity.ParentActivityId), 21, 12) || '}' 
			end as 'ParentActivityId',
		    case 
				when Activity.ActivityType = 16 
				then json_extract(Activity.Payload, '$.clipboardDataId') 
				else '' 
			end as 'clipboardDataId',
		    case 
				when Activity.ActivityType = 10 and json_extract(Activity.ClipboardPayload, '$[0].formatName') = 'Text' 
				then json_extract(Activity.ClipboardPayload, '$[0].content') 
				else '' 
			end as 'TextBase64',
		    case 
				when Activity.ActivityType = 10 and Activity.Payload not null 
				then json_extract(Activity.Payload, '$.1[0].content') 
				else '' 
			end as 'PayloadText',
		    case 
				when Activity.ActivityType = 16  and Activity.Payload not null 
				then json_extract(Activity.Payload, '$.gdprType') 
				else '' 
			end as 'gdprType',
		    case 
				when Activity.ActivityType = 10 and Activity.Payload not null
				then json_extract(Activity.Payload, '$.1[0].formatName') 
				else '' 
			end as 'Format',
		    case 
				when Activity.ActivityType = 16 and Activity.ClipboardPayload not null 
				then json_extract(Activity.ClipboardPayload, '$[0].formatName') 
				else '' 
			end as 'ClipType',
		    case 
				when Activity.ActivityType in (5,6) and Activity.OriginalPayload not null 
				then json_extract(Activity.OriginalPayload, '$.appDisplayName')  
				else ''
			end as 'OriginalName',
		    case 
				when Activity.ActivityType in (5,6) and Activity.OriginalPayload not null  
				then json_extract(Activity.OriginalPayload, '$.displayText')  
				else ''
			end as 'OriginalFile',
		    case 
				when Activity.ActivityType in (5,6) and Activity.OriginalPayload not null  
				then json_extract(Activity.OriginalPayload, '$.description')  
				else ''
			end as 'OriginalPath',
		    case 
				when Activity.ActivityType in (5,6) and Activity.OriginalPayload not null  
				then coalesce(json_extract(Activity.OriginalPayload, '$.activationUri'),json_extract(Activity.OriginalPayload, '$.reportingApp'))  
				else ''
			end as 'OriginalApp',
		    case 
				when Activity.ActivityType in (5,6) and Activity.OriginalPayload not null  
				then json_extract(Activity.OriginalPayload, '$.activeDurationSeconds') 
				else ''
			end as 'OrigDuration'
		   
		from Activity_PackageId
		join Activity on Activity_PackageId.ActivityId = Activity.Id  
		where 	Activity_PackageId.Platform = json_extract(Activity.AppId, '$[0].platform')
			and Activity_PackageId.ActivityId = Activity.Id

		order by Etag desc
    </Query>
    <Fragments>
	<Fragment source="ETAG" alias="ETAG" datatype="Integer" category="none" />
	<Fragment source="Order" alias="Order" datatype="Integer" category="none" />
	<Fragment source="Program" alias="Program Name" datatype="String" category="Content" />
	<Fragment source="Application" alias="Application ID" datatype="String" category="Content" />
	<Fragment source="FileOpened" alias="File or App Opened" datatype="String" category="none" />
	<Fragment source="FullPath" alias="Full Path" datatype="String" category="Content" />
	<Fragment source="Content" alias="Content" datatype="String" category="Content" />
	<Fragment source="AppActivityId" alias="App Activity Id" datatype="String" category="none" />
	<Fragment source="StatusTimezone" alias="Status-Timezone" datatype="String" category="none" />
	<Fragment source="ActivityType" alias="Activity Type" datatype="String" category="none" />
	<Fragment source="Synced" alias="Synced" datatype="String" category="" />
	<Fragment source="Platform" alias="Application Type" datatype="String" category="" />
	<Fragment source="TileStatus" alias="Tile Status" datatype="String" category="none" />
	<Fragment source="WasRemoved" alias="Was Removed" datatype="String" category="" />
	<Fragment source="UploadQueue" alias="In Upload Queue" datatype="String" category="none" />
	<Fragment source="IsLocalOnly" alias="Is Local Only" datatype="String" category="" />
	<Fragment source="AppUri" alias="App /Uri" datatype="String" category="" />
	<Fragment source="Priority" alias="Priority" datatype="String" category="" />
	<Fragment source="ActiveDuration" alias="Active Duration (sec)" datatype="String" category="none" />	
	<Fragment source="CalculatedDuration" alias="Calculated Duration (sec)" datatype="String" category="none" />	
	<Fragment source="StartTime" alias="Start Time" datatype="DateTime" category="DateTime" />
	<Fragment source="LastModified" alias="Last Modified Time" datatype="DateTime" category="DateTime" />
	<Fragment source="LastModifiedOnClient" alias="LastModified On Client" datatype="DateTime" category="DateTime" />
	<Fragment source="EndTime" alias="End Time" datatype="DateTime" category="DateTime" />
	<Fragment source="CreatedInCloud" alias="Created In Cloud" datatype="DateTime" category="DateTime" />
	<Fragment source="ExpiresInDays" alias="Expires In Days" datatype="Integer" category="none" />
	<Fragment source="ExpirationOnPackageID" alias="Expiration on Package_ID" datatype="Integer" category="none" />
	<Fragment source="Expiration" alias="Expiration Time" datatype="DateTime" category="DateTime" />
	<Fragment source="Tag" alias="Tag" datatype="String" category="none" />
	<Fragment source="MatchID" alias="MatchID" datatype="String" category="none" />
	<Fragment source="DeviceID" alias="Platform DeviceId" datatype="String" category="none" />
	<Fragment source="PackageIdHash" alias="PackageId Hash" datatype="String" category="none" />
	<Fragment source="Group" alias="Group" datatype="String" category="none" />
	<Fragment source="GroupAppActivityId" alias="GroupApp ActivityId" datatype="String" category="none" />
	<Fragment source="Attachments" alias="Attachments" datatype="String" category="none" />
	<Fragment source="EnterpriseId" alias="EnterpriseId" datatype="String" category="none" />
	<Fragment source="ActivityId" alias="Activity Id" datatype="String" category="none" />
	<Fragment source="ParentActivityId" alias="ParentActivityId" datatype="String" category="none" />
	<Fragment source="clipboardDataId" alias="Clipboard Data Id" datatype="String" category="none" />
	<Fragment source="TextBase64" alias="Clipboard Text (Base64)" datatype="String" category="Content" />
	<Fragment source="PayloadText" alias="Payload Text (Base64)" datatype="String" category="" />
	<Fragment source="gdprType" alias="gdpr Type" datatype="String" category="" />
	<Fragment source="Format" alias="Format" datatype="String" category="" />
	<Fragment source="ClipType" alias="Clipboard Type" datatype="String" category="" />
	<Fragment source="OriginalName" alias="Original App Name" datatype="String" category="" />
	<Fragment source="OriginalFile" alias="Original File" datatype="String" category="" />
	<Fragment source="OriginalPath" alias="Original Path/Uri" datatype="String" category="" />
	<Fragment source="OriginalApp" alias="Original App" datatype="String" category="" />
	<Fragment source="OrigDuration" alias="Original Duration (sec)" datatype="String" category="none" />
    </Fragments>
  </Artifact>

  <Artifact type="SqliteArtifact" name="Win 10 Clipboard entries (Win 10 v1903 Timeline)" version="1.0" platform="Computer">
    <Source type="FileName">ActivitiesCache.db</Source>
    <Query>
	Select
		ActivityOperation.ETag as 'ETag',
		ActivityOperation.StartTime as 'StartTime',
		ActivityOperation.LastModifiedTime as 'LastModified',
		case 
			when json_extract(ActivityOperation.AppId, '$[0].application') = '308046B0AF4A39CB' 
			then 'Mozilla Firefox-64bit'
			when json_extract(ActivityOperation.AppId, '$[0].application') = 'E7CF176E110C211B'
			then 'Mozilla Firefox-32bit'
			when json_extract(ActivityOperation.AppId, '$[1].application') = '308046B0AF4A39CB'
			then 'Mozilla Firefox-64bit'
			when json_extract(ActivityOperation.AppId, '$[1].application') = 'E7CF176E110C211B'
			then 'Mozilla Firefox-32bit'
			when length (json_extract(ActivityOperation.AppId, '$[1].application')) between 17 and 22 
			then replace(replace(replace(replace(replace
				(json_extract(ActivityOperation.AppId, '$[0].application'),
				'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)'), 
				'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
				'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System' ),
				'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
				'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
			else    replace(replace(replace(replace(replace(json_extract(ActivityOperation.AppId, 
				'$[1].application'),
				'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)' ), 
				'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
				'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System' ),
				'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
				'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
		end as 'Application',
		case 
			when json_extract(ActivityOperation.ClipboardPayload, '$[0].formatName') = 'Text' 
			then json_extract(ActivityOperation.ClipboardPayload, '$[0].content') 
			else ' ' 
		end as 'ClipText',
		json_extract(ActivityOperation.ClipboardPayload, '$[0].formatName') as 'Format',
		json_extract(ActivityOperation.Payload, '$.1[0].content') as 'PayloadContent', 
		json_extract(ActivityOperation.Payload, '$.1[0].formatName')  as 'ClipType',
	 	case ActivityOperation.ActivityType 
			when 5 then 'Open App/File/Page' 
			when 6 then 'App In Use/Focus' 
			when 10 then 'Clipboard' 
			when 16 then 'Copy/Paste'
			else ActivityOperation.ActivityType 
		end as 'ActivityType',
		ActivityOperation."Group" as 'Group',
		ActivityOperation.GroupAppActivityId as 'GroupAppActivityId',
		'{' || substr(hex(Activity_PackageId.ActivityId), 1, 8) || '-' ||
			substr(hex(Activity_PackageId.ActivityId), 9, 4) || '-' ||
			substr(hex(Activity_PackageId.ActivityId), 13, 4) || '-' ||
			substr(hex(Activity_PackageId.ActivityId), 17, 4) || '-' ||
			substr(hex(Activity_PackageId.ActivityId), 21, 12) || '}' as 'ActivityId',
		 case 
			when hex(ActivityOperation.ParentActivityId) = '00000000000000000000000000000000'
			then '' else   	 
			'{' || substr(hex(ActivityOperation.ParentActivityId), 1, 8) || '-' || 
				substr(hex(ActivityOperation.ParentActivityId), 9, 4) || '-' || 
				substr(hex(ActivityOperation.ParentActivityId), 13, 4) || '-' || 
				substr(hex(ActivityOperation.ParentActivityId), 17, 4) || '-' || 
				substr(hex(ActivityOperation.ParentActivityId), 21, 12) || '}'  
		end as 'ParentActivityId',
		json_extract(ActivityOperation.Payload, '$.clipboardDataId') as 'clipboardDataId',					
		ActivityOperation.PlatformDeviceId as 'PlatformDeviceId', 
		(cast((ActivityOperation.ExpirationTime - ActivityOperation.LastModifiedTime) as integer) / '86400') as 'ExpiresInDays',
		case 
			when ActivityOperation.OriginalLastModifiedOnClient != 0 then
				ActivityOperation.OriginalLastModifiedOnClient 
				else '  -  ' 
		end as 'LastModifiedOnClient',
		case 
			when ActivityOperation.EndTime != 0 
				then ActivityOperation.EndTime 
			else "-" 
		end as 'EndTime',
		case 
			when ActivityOperation.CreatedInCloud != 0 
				then ActivityOperation.CreatedInCloud 
				else "-" 
		end as 'CreatedInCloud',
	   Activity_PackageId.ExpirationTime as 'ExpirationOnPackageID',
	   ActivityOperation.ExpirationTime as 'ExpirationTime',  
	   '' as 'IsLocalOnly',
	   ActivityOperation.PackageIdHash as 'PackageIdHash'

	 
    from Activity_PackageId
	join ActivityOperation on Activity_PackageId.ActivityId = ActivityOperation.Id  
	where 	Activity_PackageId.Platform = json_extract(ActivityOperation.AppId, '$[0].platform')
		and Activity_PackageId.ActivityId = ActivityOperation.Id and ActivityOperation.ActivityType in (10,16)

	UNION

	Select
	 Activity.ETag as 'ETag',
	 Activity.StartTime as 'StartTime',
	 Activity.LastModifiedTime as 'LastModified',
	 case 
			when json_extract(Activity.AppId, '$[0].application') = '308046B0AF4A39CB' 
			then 'Mozilla Firefox-64bit'
			when json_extract(Activity.AppId, '$[0].application') = 'E7CF176E110C211B'
			then 'Mozilla Firefox-32bit'
			when json_extract(Activity.AppId, '$[1].application') = '308046B0AF4A39CB'
			then 'Mozilla Firefox-64bit'
			when json_extract(Activity.AppId, '$[1].application') = 'E7CF176E110C211B'
			then 'Mozilla Firefox-32bit'
			when length (json_extract(Activity.AppId, '$[1].application')) between 17 and 22 
			then 
				replace(replace(replace(replace(replace
				(json_extract(Activity.AppId, '$[0].application'),
				'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)'), 
				'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
				'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System' ),
				'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
				'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
			else    replace(replace(replace(replace(replace(json_extract(Activity.AppId, 
				'$[1].application'),
				'{'||'6D809377-6AF0-444B-8957-A3773F02200E'||'}', '*ProgramFiles (x64)' ), 
				'{'||'7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E'||'}', '*ProgramFiles (x32)'),
				'{'||'1AC14E77-02E7-4E5D-B744-2EB1AE5198B7'||'}', '*System' ),
				'{'||'F38BF404-1D43-42F2-9305-67DE0B28FC23'||'}', '*Windows'),
				'{'||'D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27'||'}', '*System32') 
	  end as 'Application',
      case 
			when json_extract(Activity.ClipboardPayload, '$[0].formatName') = 'Text' 
			then json_extract(Activity.ClipboardPayload, '$[0].content') 
			else ' ' 
	  end as 'ClipText',
	  json_extract(Activity.ClipboardPayload, '$[0].formatName') as 'Format',
	  json_extract(Activity.Payload, '$.1[0].content') as 'PayloadContent', 
	  json_extract(Activity.Payload, '$.1[0].formatName')  as 'ClipType',
	  case Activity.ActivityType 
			when 5 then 'Open App/File/Page' 
			when 6 then 'App In Use/Focus' 
			when 10 then 'Clipboard' 
			when 16 then 'Copy/Paste'
			else Activity.ActivityType 
	  end as 'ActivityType',
	  Activity."Group" as 'Group',
	  Activity.GroupAppActivityId as 'GroupAppActivityId',
	  '{' || substr(hex(Activity_PackageId.ActivityId), 1, 8) || '-' ||
		substr(hex(Activity_PackageId.ActivityId), 9, 4) || '-' ||
		substr(hex(Activity_PackageId.ActivityId), 13, 4) || '-' ||
		substr(hex(Activity_PackageId.ActivityId), 17, 4) || '-' ||
		substr(hex(Activity_PackageId.ActivityId), 21, 12) || '}' as 'ActivityId',
	  case 
			when hex(Activity.ParentActivityId) = '00000000000000000000000000000000'
			then '' else  
			 '{' || substr(hex(Activity.ParentActivityId), 1, 8) || '-' || 
					substr(hex(Activity.ParentActivityId), 9, 4) || '-' || 
					substr(hex(Activity.ParentActivityId), 13, 4) || '-' || 
					substr(hex(Activity.ParentActivityId), 17, 4) || '-' || 
					substr(hex(Activity.ParentActivityId), 21, 12) || '}' 
			end as 'ParentActivityId',
		json_extract(Activity.Payload, '$.clipboardDataId') as 'clipboardDataId',			
	    Activity.PlatformDeviceId as 'PlatformDeviceId', 
	    (cast((Activity.ExpirationTime - Activity.LastModifiedTime) as integer) / '86400') as 'ExpiresInDays',
		case 
			when Activity.OriginalLastModifiedOnClient != 0 then
			Activity.OriginalLastModifiedOnClient 
			else '  -  ' 
		end as 'LastModifiedOnClient',
		case 
			when Activity.EndTime != 0 
			then Activity.EndTime 
			else "-" 
		end as 'EndTime',
		case 
			when Activity.CreatedInCloud != 0 
			then Activity.CreatedInCloud 
			else "-" 
		end as 'CreatedInCloud',
	    Activity_PackageId.ExpirationTime as 'ExpirationOnPackageID',
	    Activity.ExpirationTime as 'ExpirationTime',  
	    case Activity.IsLocalOnly 
			when 0 then 'No' 
			when 1 then 'Yes' 
			else Activity.IsLocalOnly 
		 end as 'IsLocalOnly',
		 Activity.PackageIdHash as 'PackageIdHash'
	  
	from Activity_PackageId
	join Activity on Activity_PackageId.ActivityId = Activity.Id  
	where 	Activity_PackageId.Platform = json_extract(Activity.AppId, '$[0].platform')
		and Activity_PackageId.ActivityId = Activity.Id and Activity.ActivityType in (10,16)
		
	order by Etag desc
    </Query>
    <Fragments>
	<Fragment source="ETag" alias="ETAG" datatype="Integer" category="none" />
	<Fragment source="StartTime" alias="Start Time" datatype="DateTime" category="DateTime" />
	<Fragment source="LastModified" alias="Last Modified" datatype="DateTime" category="DateTime" />
	<Fragment source="Application" alias="Application" datatype="String" category="none" />
	<Fragment source="ClipText" alias="Clipboard Text(Base64)" datatype="String" category="Content" />
	<Fragment source="Format" alias="Format" datatype="String" category="none" />
	<Fragment source="PayloadContent" alias="Payload Content" datatype="String" category="Content" />	
	<Fragment source="ClipType" alias="Type" datatype="String" category="none" />	
	<Fragment source="ActivityType" alias="Activity Type" datatype="String" category="none" />	
	<Fragment source="Group" alias="Group" datatype="String" category="none" />
	<Fragment source="GroupAppActivityId" alias="GroupApp ActivityId" datatype="String" category="none" />
	<Fragment source="ActivityId" alias="Activity Id" datatype="String" category="none" />		
	<Fragment source="ParentActivityId" alias="Parent ActivityId" datatype="String" category="none" />	
	<Fragment source="clipboardDataId" alias="clipboard Data Id" datatype="String" category="none" />	
	<Fragment source="PlatformDeviceId" alias="Device Id" datatype="String" category="none" />	
	<Fragment source="ExpiresInDays" alias="Expires in days" datatype="Integer" category="none" />	
	<Fragment source="LastModifiedOnClient" alias="LastModified OnClient" datatype="DateTime" category="DateTime" />	
	<Fragment source="EndTime" alias="EndTime" datatype="DateTime" category="DateTime" />	
	<Fragment source="CreatedInCloud" alias="Created In Cloud" datatype="DateTime" category="DateTime" />	
	<Fragment source="ExpirationOnPackageID" alias="Expiration on PackageID" datatype="DateTime" category="DateTime" />	
	<Fragment source="ExpirationTime" alias="Expiration Time" datatype="DateTime" category="DateTime" />	
	<Fragment source="IsLocalOnly" alias="Is Local Only" datatype="String" category="none" />	
	<Fragment source="PackageIdHash" alias="PackageId Hash" datatype="String" category="none" />	
    </Fragments>
  </Artifact>
  <Signature>

  </Signature>
</Artifacts>